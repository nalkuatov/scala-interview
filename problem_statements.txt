
Задача 1.

Написать решение для задачи поиска выхода из лабиринта.

Необходимо разработать модуль в соответствие со всеми Best Practices of functional programming, который бы находил выход из лабиринта,

который может быть представлен различными типами карт (придумать самостоятельно варианты реализации карт).

Разработать по меньшей мере два алгоритма поиска выхода из лабиринта, каждый из которых мог бы работать со всеми типами карт.

Найти применение для базы данных в задаче (PostgreSQL).

Провести комплексное автоматизированное тестирование модуля.

На вход программа принимает карту, стартовую точку и конечную точку.

В результате исполнения алгоритма, должен получится маршрут выхода из лабиринта. Все должно быть в читаемом виде.

 

Задача 2.

1.       Предположим, что у вас есть круговой отсортированный массив.

 

В массиве не существует дубликатов.

 

Примеры массивов: [4, 5, 6, 7, 8, 9, 0, 1, 2, 3] или [30, 40, 50, 10, 20].

 

Вам дается целочисленное значение для поиска.

 

Ваша задача написать функцию, которая возвращает индекс данного целочисленного значения в массиве.

 

В случаи отсутствие ископаемого значения в массиве функция должна вернуть -1.

 

Длина массива не фиксированная.

 

Функция может принять в качестве аргумента массив из 100 элемента, так и массив из 100 миллионов элементов.

 

Попробуйте обосновать, что ваша функция по времени выполнения оптимальная.

 

Пример 1:

 

Input: array = [4, 5, 6, 7, 8, 9, 0, 1, 2, 3]; target = 1

 

Output: 7

 

Пример 2:

 

Input: array = [30, 40, 50, 10, 20]; target = 60

 

Output: -1
